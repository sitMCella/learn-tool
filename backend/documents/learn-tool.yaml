openapi: "3.0.0"
info:
  title: Learn Tool REST APIs
  description: Documentation for the Learn Tool REST APIs.
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /api/workspaces:
    post:
      security:
        - bearerAuth: [ ]
      summary: Create a new Workspace
      operationId: create-workspace
      tags:
        - workspace
      requestBody:
        description: Workspace payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
            example:
              name: "workspaceTest"
      responses:
        '201':
          description: Workspace successfully created.
          headers:
            location:
              description: The location of the created Workspace.
              schema:
                type: string
              example:
                location: /workspaces/workspaceTest
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  userId:
                    type: number
              example:
                name: "workspaceTest"
        '401':
          description: The user is not authorized to perform the operation.
        '409':
          description: A Workspace already exists with this name.
        '422':
          description: >-
            Either the JWT Token has not been provided or the workspace name is empty or incorrect. Allowed characters: [a-zA-Z0-9-_].
        '500':
          description: An error occured while creating the Workspace.
    get:
      security:
        - bearerAuth: [ ]
      summary: Get all the Workspaces
      operationId: get-workspaces
      tags:
        - workspace
      responses:
        '200':
          description: The list of Workspaces.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                example:
                  - name: "workspaceTest"
        '401':
          description: The user is not authorized to perform the operation.
        '422':
          description: >-
            The JWT Token has not been provided.
  /api/workspaces/{workspaceName}/cards:
    post:
      security:
        - bearerAuth: [ ]
      summary: Create a new Card
      operationId: create-card
      tags:
        - card
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
      requestBody:
        description: Card content payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - response
              properties:
                question:
                  type: string
                response:
                  type: string
            example:
              question: "This is a question"
              response: "This is a response"
      responses:
        '201':
          description: Card successfully created.
          headers:
            location:
              description: The location of the created Card.
              schema:
                type: string
              example:
                location: "/workspaces/workspaceTest/cards/3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  workspaceName:
                    type: string
                  question:
                    type: string
                  response:
                    type: string
              example:
                id: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
                workspaceName: "workspaceTest"
                question: "This is a question"
                response: "This is a response"
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Workspace does not exist.
        '409':
          description: A Card already exists with this id.
        '422':
          description: Either the JWT Token has not been provided or the Card content fields are null or empty.
        '500':
          description: An error occured while creating the Card.
    get:
      security:
        - bearerAuth: [ ]
      summary: Get the Cards of a Workspace
      operationId: get-cards
      tags:
        - card
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
        - name: page
          in: query
          description: The page parameter of the pagination.
          required: false
          schema:
            type: integer
            format: int32
          example: 0
        - name: size
          in: query
          description: The size parameter of the pagination.
          required: false
          schema:
            type: integer
            format: int32
          example: 20
      responses:
        '200':
          description: The list of Cards.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    workspaceName:
                      type: string
                    question:
                      type: string
                    response:
                      type: string
                example:
                  - id: "123"
                    workspaceName: "workspaceTest"
                    question: "Question"
                    response: "Response"
          headers:
            count:
              description: The total count of Cards.
              schema:
                type: integer
                format: int64
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Workspace does not exist.
        '422':
          description: The JWT Token has not been provided.
  /api/workspaces/{workspaceName}/cards/{cardId}:
    put:
      security:
        - bearerAuth: [ ]
      summary: Update a Card
      operationId: update-card
      tags:
        - card
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
        - name: cardId
          in: path
          description: The Id of the Card.
          required: true
          schema:
            type: string
          example: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
      requestBody:
        description: Card content payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - response
              properties:
                question:
                  type: string
                response:
                  type: string
            example:
              question: "This is a question"
              response: "This is a response"
      responses:
        '200':
          description: Card successfully updated.
          headers:
            location:
              description: The location of the created Card.
              schema:
                type: string
              example:
                location: "/workspaces/workspaceTest/cards/3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  workspaceName:
                    type: string
                  question:
                    type: string
                  response:
                    type: string
              example:
                id: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
                workspaceName: "workspaceTest"
                question: "This is a question"
                response: "This is a response"
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Workspace does not exist.
        '422':
          description: >-
            Either the JWT Token has not been provided or the Card content fields are null or empty, or the Card does not belong to the Workspace.
        '500':
          description: An error occured while updating the Card.
    delete:
      security:
        - bearerAuth: [ ]
      summary: Delete a Card
      operationId: delete-card
      tags:
        - card
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
        - name: cardId
          in: path
          description: The Id of the Card.
          required: true
          schema:
            type: string
          example: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
      responses:
        '200':
          description: Card successfully deleted.
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Workspace does not exist.
        '422':
          description: Either the JWT Token has not been provided or the Card does not belong to the Workspace.
        '500':
          description: An error occured while deleting the Card.
  /api/workspaces/{workspaceName}/cards/many.csv:
    post:
      security:
        - bearerAuth: [ ]
      summary: Create new Cards
      operationId: create-cards
      tags:
        - card
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
      requestBody:
        description: Cards content payload.
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
            example: >-
              question,response
              questionTest,responseTest
      responses:
        '201':
          description: Cards successfully created.
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Workspace does not exist.
        '409':
          description: One of the Cards already exists with the same id.
        '422':
          description: >-
            Either the JWT Token has not been provided or the CSV fields are null or empty, or missing headers.
        '500':
          description: An error occured while creating the Cards.
  /api/workspaces/{workspaceName}/learn:
    get:
      security:
        - bearerAuth: [ ]
      summary: Retrieve a Card from the Workspace
      operationId: retrieve-card
      tags:
        - card
        - learn
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
      responses:
        '200':
          description: Card content.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  workspaceName:
                    type: string
                  question:
                    type: string
                  response:
                    type: string
              example:
                id: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
                workspaceName: "workspaceTest"
                question: "This is a question"
                response: "This is a response"
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Workspace or the Card do not exist.
        '422':
          description: The JWT Token has not been provided.
  /api/workspaces/{workspaceName}/learn/{cardId}:
    post:
      security:
        - bearerAuth: [ ]
      summary: Create a new LearnCard
      operationId: create-learn-card
      tags:
        - card
        - learn
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
        - name: cardId
          in: path
          description: The Card ID.
          required: true
          schema:
            type: string
          example: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
      responses:
        '201':
          description: LearnCard successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  workspaceName:
                    type: string
                  lastReview:
                    type: string
                    format: date-time
                  nextReview:
                    type: string
                    format: date-time
                  repetitions:
                    type: integer
                  easeFactor:
                    type: number
                    format: float
                  intervalDays:
                    type: integer
              example:
                id: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
                workspaceName: "workspaceTest"
                lastReview: "2020-04-10T19:46:06.167117Z"
                nextReview: "2020-04-10T19:46:06.167117Z"
                repetitions: 0
                easeFactor: 1.3
                intervalDays: 0
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Card does not exist.
        '406':
          description: The Card does not belong to the Workspace.
        '409':
          description: The LearnCard already exists.
        '422':
          description: The JWT Token has not been provided.
        '500':
          description: An error occured while creating the LearnCard.
    put:
      security:
        - bearerAuth: [ ]
      summary: Evaluate a Card from the Workspace
      operationId: evaluate-card
      tags:
        - card
        - learn
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
        - name: cardId
          in: path
          description: The Card ID.
          required: true
          schema:
            type: string
          example: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
      requestBody:
        description: Evaluation parameters content payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quality
              properties:
                quality:
                  type: integer
            example:
              cardId: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
              quality: 5
      responses:
        '200':
          description: LearnCard content.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  workspaceName:
                    type: string
                  lastReview:
                    type: string
                    format: date-time
                  nextReview:
                    type: string
                    format: date-time
                  repetitions:
                    type: integer
                  easeFactor:
                    type: number
                    format: float
                  intervalDays:
                    type: integer
              example:
                id: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
                workspaceName: "workspaceTest"
                lastReview: "2020-04-10T19:46:06.167117Z"
                nextReview: "2020-04-10T19:47:06.167117Z"
                repetitions: 1
                easeFactor: 1.4
                intervalDays: 1
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Workspace or the Card do not exist.
        '406':
          description: The Card does not belong to the Workspace or not acceptable evaluation parameters.
        '422':
          description: The JWT Token has not been provided.
        '500':
          description: An error occured while evaluating the Card.
    delete:
      security:
        - bearerAuth: [ ]
      summary: Delete a new LearnCard
      operationId: delete-learn-card
      tags:
        - card
        - learn
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
        - name: cardId
          in: path
          description: The Card ID.
          required: true
          schema:
            type: string
          example: "3cf14a93-f8c7-4b6b-ac24-a662ca500c21"
      responses:
        '200':
          description: LearnCard successfully deleted.
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Card or the LearnCard do not exist.
        '406':
          description: The Card does not belong to the Workspace.
        '422':
          description: The JWT Token has not been provided.
        '500':
          description: An error occured while deleting the LearnCard.
  /api/workspaces/{workspaceName}/search:
    post:
      security:
        - bearerAuth: [ ]
      summary: Search the Cards
      operationId: search-cards
      tags:
        - workspace
        - search
        - card
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
        - name: content
          in: query
          description: The search pattern content.
          required: true
          schema:
            type: string
          example: "search content"
      responses:
        '200':
          description: The retrieved Cards.
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Workspace does not exist.
        '422':
          description: The JWT Token has not been provided.
        '500':
          description: An error occured while searching the Cards.
  /api/workspaces/{workspaceName}/export:
    get:
      security:
        - bearerAuth: [ ]
      summary: Export the Workspace backup
      operationId: export-workspace
      tags:
        - workspace
        - export
      parameters:
        - name: workspaceName
          in: path
          description: The name of the Workspace.
          required: true
          schema:
            type: string
          example: "workspaceTest"
      responses:
        '200':
          description: Workspace backup file.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: The user is not authorized to perform the operation.
        '404':
          description: The Workspace does not exist.
        '422':
          description: The JWT Token has not been provided.
        '500':
          description: An error occured while exporting the Workspace backup file.
  /api/workspaces/impprt:
    post:
      security:
        - bearerAuth: [ ]
      summary: Import the Workspace backup
      operationId: import-workspace
      tags:
        - workspace
        - import
      requestBody:
        description: Workspace backup file payload.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        '200':
          description: The Workspace backup file has been correctly imported.
        '401':
          description: The user is not authorized to perform the operation.
        '409':
          description: A Workspace already exists with this name.
        '422':
          description: The JWT Token has not been provided.
        '500':
          description: An error occured while importing the Workspace backup file.
  /api/auth/login:
    post:
      summary: Login in Learn Tool
      operationId: login
      tags:
        - login
      requestBody:
        description: Login request payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: "user@google.com"
              password: "PassW@rD!"
      responses:
        '200':
          description: The User login is successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  tokenType:
                    type: string
              example:
                accessToken: "token"
                tokenType: "Bearer"
        '401':
          description: Bad credentials.
  /api/auth/signup:
    post:
      summary: Signup in Learn Tool
      operationId: signup
      tags:
        - signup
      requestBody:
        description: Signup request payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
            example:
              name: "User"
              email: "user@google.com"
              password: "PassW@rD!"
      responses:
        '201':
          description: The User has been signed up successfully.
          headers:
            location:
              description: The location of the created User.
              schema:
                type: string
              example:
                location: /user/me/1
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: true
                message: "User registered successfully"
  /api/user/me:
    get:
      security:
        - bearerAuth: [ ]
      summary: Get the User details
      operationId: user
      tags:
        - user
      responses:
        '200':
          description: The User details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  email:
                    type: string
                  imageUrl:
                    type: string
                  emailVerified:
                    type: boolean
                  authProvider:
                    type: string
                  authProviderId:
                    type: string
              example:
                id: 1
                name: "User"
                email: "user@google.com"
                imageUrl: "image"
                emailVerified: true
                authProvider: "google"
                authProviderId: "google"
        '404':
          description: User not found.
